apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'

def libraryName = 'mmupnp'

group pj.groupId
archivesBaseName = libraryName
version pj.versions.name

sourceCompatibility = 1.8
targetCompatibility = 1.8

test.maxParallelForks = 4

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'net.mm2d:log:0.2.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.mockito:mockito-core:2.18.3'
}

bintray {
    user = project.hasProperty('bintray_user') ? bintray_user : ''
    key = project.hasProperty('bintray_key') ? bintray_key : ''
    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = pj.groupId + '.' + libraryName
        licenses = ['MIT']
        websiteUrl = pj.siteUrl
        issueTrackerUrl = pj.githubUrl + '/blob/master/LICENSE'
        vcsUrl = pj.githubUrl + '.git'
        issueTrackerUrl = pj.githubUrl + '/issues'
        publicDownloadNumbers = true
        version {
            name = project.version
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name = libraryName
            url = pj.siteUrl

            packaging = 'aar'
            groupId = pj.groupId
            artifactId = libraryName
            version = pj.versions.name

            licenses {
                license {
                    name = 'The MIT License'
                    url = 'https://opensource.org/licenses/MIT'
                    distribution = 'repo'
                }
            }
            scm {
                connection pj.githubUrl + '.git'
                url pj.githubUrl
            }
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'file:build/maven')
            pom.project {
                groupId = pj.groupId
                artifactId = libraryName
                version = pj.versions.name
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
}

javadoc {
    title = "mmupnp $version API"
    description "Generates Javadoc."
    options {
        charSet = 'UTF-8'
        encoding = "UTF-8"
        links("https://docs.oracle.com/javase/jp/7/api/")
        stylesheetFile = new File("stylesheet.css")
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jacoco {
    toolVersion = '0.8.1'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
